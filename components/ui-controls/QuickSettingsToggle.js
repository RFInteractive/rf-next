/** @jsxImportSource theme-ui */
import { Close, useColorMode } from 'theme-ui';
import { useState, useEffect } from 'react';
import { AnimatePresence } from 'framer-motion';

import ThemeColorToggle from './ThemeColorToggle';
import FormModalToggle from './FormModalToggle';

const QuickSettingsToggle = () => {
    const [toggleOpen, setToggleOpen] = useState(false);
    const [mode, setMode] = useColorMode();

    useEffect(() => {
        if (mode === 'dark') {
            setMode('light');
        }
    }, [mode, setMode]);

    const changeToggleOpen = () => {
        setToggleOpen((status) => !status);
    };

    return (
        <>
            <div
                sx={{
                    position: 'fixed',
                    left: '20px',
                    bottom: '20px',
                    zIndex: '100',
                    width: '50px',
                    height: '50px',
                    backgroundColor: mode === 'deep' ? 'primary' : 'secondary',
                    padding: '10px;',
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.1)',
                    borderRadius: '50%',
                    transition: 'all 0.2s ease-out',
                    '&:hover': {
                        cursor: 'pointer',
                        transform: 'scale(1.06)',
                    },
                }}
                onClick={changeToggleOpen}>
                {!toggleOpen ? (
                    <svg
                        viewBox="0 0 33 33"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                        sx={{ width: '100%' }}>
                        <path
                            d="M29.3554 16.9111V15.1575L31.6155 13.2321C32.0321 12.8746 32.3055 12.3852 32.3874 11.8504C32.4692 11.3155 32.3543 10.7698 32.0628 10.3095L29.2848 5.72512C29.0784 5.37701 28.7815 5.08787 28.4241 4.88671C28.0667 4.68555 27.6612 4.57944 27.2483 4.57902C26.9925 4.57711 26.738 4.61583 26.495 4.69363L23.6346 5.63344C23.1407 5.31391 22.6255 5.02675 22.0925 4.77386L21.4922 1.88568C21.3845 1.35802 21.0897 0.884038 20.6593 0.546696C20.2289 0.209355 19.6903 0.0301526 19.1379 0.0404602H13.6289C13.0765 0.0301526 12.538 0.209355 12.1075 0.546696C11.6771 0.884038 11.3823 1.35802 11.2747 1.88568L10.6743 4.77386C10.1375 5.02669 9.61841 5.31384 9.12052 5.63344L6.31895 4.64779C6.07328 4.58547 5.81887 4.56225 5.56559 4.57902C5.15274 4.57944 4.74726 4.68555 4.38982 4.88671C4.03239 5.08787 3.73557 5.37701 3.52915 5.72512L0.751119 10.3095C0.476361 10.7691 0.374262 11.3074 0.462309 11.8322C0.550355 12.357 0.823069 12.8357 1.23374 13.1862L3.45852 15.169V16.9225L1.23374 18.848C0.811469 19.201 0.531296 19.6882 0.442944 20.2232C0.354592 20.7583 0.463776 21.3065 0.751119 21.7705L3.52915 26.355C3.73557 26.7031 4.03239 26.9922 4.38982 27.1934C4.74726 27.3945 5.15274 27.5006 5.56559 27.5011C5.82144 27.503 6.07589 27.4643 6.31895 27.3864L9.17938 26.4466C9.67323 26.7662 10.1884 27.0533 10.7214 27.3062L11.3218 30.1944C11.4294 30.7221 11.7242 31.196 12.1546 31.5334C12.585 31.8707 13.1236 32.0499 13.676 32.0396H19.2321C19.7845 32.0499 20.3231 31.8707 20.7535 31.5334C21.1839 31.196 21.4787 30.7221 21.5863 30.1944L22.1867 27.3062C22.7235 27.0534 23.2426 26.7662 23.7405 26.4466L26.5892 27.3864C26.8322 27.4643 27.0867 27.503 27.3425 27.5011C27.7554 27.5006 28.1608 27.3945 28.5183 27.1934C28.8757 26.9922 29.1725 26.7031 29.379 26.355L32.0628 21.7705C32.3376 21.311 32.4397 20.7727 32.3516 20.2479C32.2636 19.7231 31.9909 19.2444 31.5802 18.8938L29.3554 16.9111ZM27.2483 25.2089L23.2108 23.8794C22.2656 24.6588 21.1854 25.2682 20.0208 25.6788L19.185 29.7933H13.6289L12.7932 25.7246C11.6377 25.3024 10.5634 24.6941 9.61492 23.9252L5.56559 25.2089L2.78756 20.6244L5.98935 17.8738C5.7717 16.6874 5.7717 15.4729 5.98935 14.2865L2.78756 11.4556L5.56559 6.87123L9.60315 8.2007C10.5483 7.42123 11.6285 6.81192 12.7932 6.40133L13.6289 2.28682H19.185L20.0208 6.35548C21.1762 6.77773 22.2506 7.38599 23.199 8.15486L27.2483 6.87123L30.0264 11.4556L26.8246 14.2063C27.0422 15.3927 27.0422 16.6072 26.8246 17.7936L30.0264 20.6244L27.2483 25.2089Z"
                            sx={{ fill: 'alwaysLight' }}
                        />
                        <path
                            d="M16.4065 22.9163C15.0097 22.9163 13.6441 22.513 12.4827 21.7574C11.3212 21.0018 10.4159 19.9278 9.88138 18.6713C9.34681 17.4147 9.20694 16.0321 9.47946 14.6981C9.75198 13.3642 10.4246 12.1389 11.4124 11.1772C12.4001 10.2155 13.6586 9.56056 15.0287 9.29522C16.3987 9.02989 17.8188 9.16607 19.1094 9.68654C20.3999 10.207 21.503 11.0884 22.279 12.2193C23.0551 13.3501 23.4693 14.6796 23.4693 16.0397C23.4788 16.9453 23.3025 17.8436 22.9509 18.6821C22.5993 19.5206 22.0795 20.2823 21.4217 20.9227C20.764 21.5631 19.9816 22.0693 19.1205 22.4116C18.2593 22.7539 17.3367 22.9255 16.4065 22.9163V22.9163ZM16.4065 11.4553C15.7842 11.4412 15.1655 11.5501 14.5877 11.7755C14.0098 12.0009 13.485 12.3381 13.0448 12.7666C12.6047 13.1952 12.2584 13.7062 12.0269 14.2688C11.7954 14.8313 11.6835 15.4338 11.698 16.0397C11.6835 16.6456 11.7954 17.248 12.0269 17.8106C12.2584 18.3732 12.6047 18.8842 13.0448 19.3128C13.485 19.7413 14.0098 20.0785 14.5877 20.3039C15.1655 20.5293 15.7842 20.6382 16.4065 20.6241C17.0288 20.6382 17.6476 20.5293 18.2254 20.3039C18.8032 20.0785 19.3281 19.7413 19.7682 19.3128C20.2084 18.8842 20.5547 18.3732 20.7862 17.8106C21.0177 17.248 21.1296 16.6456 21.1151 16.0397C21.1296 15.4338 21.0177 14.8313 20.7862 14.2688C20.5547 13.7062 20.2084 13.1952 19.7682 12.7666C19.3281 12.3381 18.8032 12.0009 18.2254 11.7755C17.6476 11.5501 17.0288 11.4412 16.4065 11.4553Z"
                            sx={{ fill: 'alwaysLight' }}
                        />
                    </svg>
                ) : (
                    <Close
                        size={50}
                        sx={{
                            color: 'alwaysLight',
                            '&:hover': {
                                cursor: 'pointer',
                            },
                        }}
                    />
                )}
            </div>
            <AnimatePresence>
                {toggleOpen && <ThemeColorToggle key="themeColorToggle" />}
            </AnimatePresence>
            <AnimatePresence>
                {toggleOpen && <FormModalToggle key="themeColorToggle" />}
            </AnimatePresence>
        </>
    );
};

export default QuickSettingsToggle;
