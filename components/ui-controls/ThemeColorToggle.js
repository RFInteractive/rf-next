/** @jsxImportSource theme-ui */
import { motion } from 'framer-motion';
import { useEffect } from 'react';
import { useColorMode } from 'theme-ui';

const modes = ['light', 'deep'];

const ThemeColorToggle = () => {
    const [mode, setMode] = useColorMode();

    useEffect(() => {
        if (mode === 'dark') {
            setMode('light');
        }
    }, [mode, setMode]);

    const toggleColorMode = () => {
        const index = modes.indexOf(mode);
        const next = modes[(index + 1) % modes.length];
        setMode(next);
    };

    return (
        <motion.div
            initial={{
                opacity: 0,
                position: 'fixed',
                left: '20px',
                bottom: '20px',
            }}
            animate={{
                opacity: 1,
                position: 'fixed',
                left: '50px',
                bottom: '100px',
                zIndex: '99',
            }}
            exit={{
                opacity: 0,
                position: 'fixed',
                left: '20px',
                bottom: '20px',
            }}>
            <div
                sx={{
                    width: '40px',
                    height: '40px',
                    backgroundColor: mode === 'deep' ? 'primary' : 'muted',
                    padding: '10px;',
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.1)',
                    borderRadius: '50%',
                    transition: 'all 0.2s ease-out',
                    '&:hover': {
                        cursor: 'pointer',
                        transform: 'scale(1.06)',
                    },
                }}
                onClick={toggleColorMode}>
                {mode === 'deep' ? (
                    <svg
                        viewBox="0 0 50 50"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M25 34.375C22.5136 34.375 20.129 33.3873 18.3709 31.6291C16.6127 29.871 15.625 27.4864 15.625 25C15.625 22.5136 16.6127 20.129 18.3709 18.3709C20.129 16.6127 22.5136 15.625 25 15.625C27.4864 15.625 29.871 16.6127 31.6291 18.3709C33.3873 20.129 34.375 22.5136 34.375 25C34.375 27.4864 33.3873 29.871 31.6291 31.6291C29.871 33.3873 27.4864 34.375 25 34.375ZM25 37.5C28.3152 37.5 31.4946 36.183 33.8388 33.8388C36.183 31.4946 37.5 28.3152 37.5 25C37.5 21.6848 36.183 18.5054 33.8388 16.1612C31.4946 13.817 28.3152 12.5 25 12.5C21.6848 12.5 18.5054 13.817 16.1612 16.1612C13.817 18.5054 12.5 21.6848 12.5 25C12.5 28.3152 13.817 31.4946 16.1612 33.8388C18.5054 36.183 21.6848 37.5 25 37.5V37.5ZM25 0C25.4144 0 25.8118 0.16462 26.1049 0.457646C26.3979 0.750671 26.5625 1.1481 26.5625 1.5625V7.8125C26.5625 8.2269 26.3979 8.62433 26.1049 8.91735C25.8118 9.21038 25.4144 9.375 25 9.375C24.5856 9.375 24.1882 9.21038 23.8951 8.91735C23.6021 8.62433 23.4375 8.2269 23.4375 7.8125V1.5625C23.4375 1.1481 23.6021 0.750671 23.8951 0.457646C24.1882 0.16462 24.5856 0 25 0V0ZM25 40.625C25.4144 40.625 25.8118 40.7896 26.1049 41.0826C26.3979 41.3757 26.5625 41.7731 26.5625 42.1875V48.4375C26.5625 48.8519 26.3979 49.2493 26.1049 49.5424C25.8118 49.8354 25.4144 50 25 50C24.5856 50 24.1882 49.8354 23.8951 49.5424C23.6021 49.2493 23.4375 48.8519 23.4375 48.4375V42.1875C23.4375 41.7731 23.6021 41.3757 23.8951 41.0826C24.1882 40.7896 24.5856 40.625 25 40.625V40.625ZM50 25C50 25.4144 49.8354 25.8118 49.5424 26.1049C49.2493 26.3979 48.8519 26.5625 48.4375 26.5625H42.1875C41.7731 26.5625 41.3757 26.3979 41.0826 26.1049C40.7896 25.8118 40.625 25.4144 40.625 25C40.625 24.5856 40.7896 24.1882 41.0826 23.8951C41.3757 23.6021 41.7731 23.4375 42.1875 23.4375H48.4375C48.8519 23.4375 49.2493 23.6021 49.5424 23.8951C49.8354 24.1882 50 24.5856 50 25ZM9.375 25C9.375 25.4144 9.21038 25.8118 8.91735 26.1049C8.62433 26.3979 8.2269 26.5625 7.8125 26.5625H1.5625C1.1481 26.5625 0.750671 26.3979 0.457646 26.1049C0.16462 25.8118 0 25.4144 0 25C0 24.5856 0.16462 24.1882 0.457646 23.8951C0.750671 23.6021 1.1481 23.4375 1.5625 23.4375H7.8125C8.2269 23.4375 8.62433 23.6021 8.91735 23.8951C9.21038 24.1882 9.375 24.5856 9.375 25ZM42.6781 7.32187C42.971 7.61489 43.1356 8.01224 43.1356 8.42656C43.1356 8.84088 42.971 9.23824 42.6781 9.53125L38.2594 13.9531C38.1141 14.0982 37.9417 14.2132 37.7519 14.2917C37.5622 14.3701 37.3589 14.4104 37.1536 14.4102C36.739 14.41 36.3414 14.245 36.0484 13.9516C35.9034 13.8063 35.7883 13.6339 35.7099 13.4441C35.6315 13.2544 35.5912 13.0511 35.5913 12.8458C35.5916 12.4311 35.7566 12.0336 36.05 11.7406L40.4687 7.32187C40.7618 7.02895 41.1591 6.8644 41.5734 6.8644C41.9878 6.8644 42.3851 7.02895 42.6781 7.32187V7.32187ZM13.95 36.05C14.2429 36.343 14.4075 36.7404 14.4075 37.1547C14.4075 37.569 14.2429 37.9664 13.95 38.2594L9.53125 42.6781C9.23656 42.9627 8.84187 43.1202 8.43219 43.1167C8.0225 43.1131 7.63061 42.9488 7.34091 42.6591C7.05121 42.3694 6.88688 41.9775 6.88332 41.5678C6.87976 41.1581 7.03725 40.7634 7.32187 40.4687L11.7406 36.05C12.0336 35.7571 12.431 35.5925 12.8453 35.5925C13.2596 35.5925 13.657 35.7571 13.95 36.05V36.05ZM42.6781 42.6781C42.3851 42.971 41.9878 43.1356 41.5734 43.1356C41.1591 43.1356 40.7618 42.971 40.4687 42.6781L36.05 38.2594C35.7654 37.9647 35.6079 37.57 35.6114 37.1603C35.615 36.7506 35.7793 36.3587 36.069 36.069C36.3587 35.7793 36.7506 35.615 37.1603 35.6114C37.57 35.6079 37.9647 35.7654 38.2594 36.05L42.6781 40.4687C42.971 40.7618 43.1356 41.1591 43.1356 41.5734C43.1356 41.9878 42.971 42.3851 42.6781 42.6781ZM13.95 13.9531C13.657 14.246 13.2596 14.4106 12.8453 14.4106C12.431 14.4106 12.0336 14.246 11.7406 13.9531L7.32187 9.53125C7.17264 9.38711 7.05361 9.2147 6.97172 9.02407C6.88983 8.83344 6.84672 8.62841 6.84492 8.42094C6.84312 8.21347 6.88265 8.00772 6.96122 7.8157C7.03978 7.62367 7.1558 7.44922 7.30251 7.30251C7.44922 7.1558 7.62367 7.03978 7.8157 6.96122C8.00772 6.88265 8.21347 6.84312 8.42094 6.84492C8.62841 6.84672 8.83344 6.88983 9.02407 6.97172C9.2147 7.05361 9.38711 7.17264 9.53125 7.32187L13.95 11.7406C14.0955 11.8858 14.211 12.0582 14.2897 12.248C14.3685 12.4378 14.409 12.6414 14.409 12.8469C14.409 13.0524 14.3685 13.2559 14.2897 13.4457C14.211 13.6356 14.0955 13.808 13.95 13.9531V13.9531Z"
                            fill="black"
                            sx={{ fill: 'alwaysLight' }}
                        />
                    </svg>
                ) : (
                    <svg
                        viewBox="0 0 50 50"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M26.2797 50C19.2406 50 12.6358 47.2717 7.68195 42.3181C2.72809 37.3644 6.15466e-07 30.7593 6.15466e-07 23.7201C-0.0010502 18.8641 1.34351 14.1029 3.88445 9.96476C6.42538 5.82665 10.0633 2.47358 14.3944 0.277707C14.84 0.0505622 15.3426 -0.0403063 15.8395 0.0164444C16.3364 0.0731951 16.8056 0.275051 17.1885 0.596814C17.5714 0.918577 17.8511 1.34599 17.9926 1.82571C18.134 2.30542 18.1311 2.81618 17.9841 3.29423C16.7482 7.2862 16.6267 11.54 17.6328 15.596C18.6389 19.652 20.7343 23.3559 23.6925 26.3075C25.8155 28.4463 28.3416 30.1426 31.1245 31.2985C33.9075 32.4544 36.8922 33.0467 39.9056 33.0413C42.2109 33.0431 44.5033 32.6973 46.7055 32.0157C47.1836 31.8686 47.6944 31.8655 48.1741 32.007C48.6539 32.1484 49.0814 32.4281 49.4032 32.811C49.725 33.194 49.9269 33.6632 49.9836 34.1602C50.0403 34.6572 49.9494 35.1598 49.7221 35.6054C47.5262 39.9365 44.1731 43.5745 40.035 46.1154C35.8969 48.6564 31.1357 50.001 26.2797 50V50ZM14.3035 4.14289C10.9449 6.18635 8.17057 9.06198 6.24879 12.4916C4.32701 15.9212 3.32284 19.7887 3.33341 23.7201C3.33341 36.3727 13.627 46.6666 26.2797 46.6666C30.211 46.6772 34.0786 45.673 37.5083 43.7513C40.9379 41.8295 43.8135 39.0551 45.857 35.6966C43.9055 36.1482 41.9089 36.3758 39.9058 36.375C36.4545 36.3816 33.0361 35.7035 29.8485 34.3801C26.6609 33.0566 23.7676 31.1141 21.3358 28.6649C18.1767 25.5118 15.8733 21.6057 14.6428 17.3152C13.4124 13.0248 13.2956 8.49161 14.3035 4.14352V4.14289Z"
                            sx={{
                                fill:
                                    mode === 'deep'
                                        ? 'alwaysLight'
                                        : 'secondary',
                            }}
                        />
                    </svg>
                )}
            </div>
        </motion.div>
    );
};

export default ThemeColorToggle;
